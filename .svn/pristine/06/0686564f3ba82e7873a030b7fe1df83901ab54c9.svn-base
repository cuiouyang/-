package test;

import java.io.UnsupportedEncodingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import org.apache.commons.codec.binary.Hex;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.AbstractJUnit4SpringContextTests;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.bsi.ms.model.Dept;
import com.bsi.ms.model.User;
import com.bsi.ms.service.CommonService;
import com.bsi.ms.service.LdapService;


@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations="classpath:spring/application-context.xml")
public class LdapTest extends AbstractJUnit4SpringContextTests  {
	@Autowired
	private LdapService ldapService;

	@Autowired
	private CommonService commonService;
	@Test
	public void testFind() {
		List<Dept> depts = ldapService.findDept("研发中心");
		System.out.println(depts.size());
		for(Dept dept : depts ){
			System.out.println(dept);
		}
	}

	// 批量查询
	@Test
	public void testSearch() {
		List<User> lists = ldapService.searchUsersByDept("");
		for(User u :lists){
			System.out.println(u.getName());
		}
		System.out.println(lists.size());
	}
	@Test
	public void testAuth(){
		boolean b = ldapService.authenticate("yangxl@51bsi.com", "Itianmeng41^");
		System.out.println(b);
	}
	@Test
	public void testSearchUser() {
		User user = ldapService.findUserByName("杨小林");
		System.out.println(user);
		user = ldapService.findUserByAccount("yangxl@51bsi.com");
		System.out.println(user);
	}
	@Test
	public void getSeq() {
		 String serialNo =commonService.getSequnce();
		 System.out.println(serialNo);
	}
	
	public static void main(String[] args) throws ParseException, UnsupportedEncodingException {
		String x= "�#�M��D�A�y";
		System.out.println(x.hashCode());
		byte[] bytes = x.getBytes("ISO8859-1");
		for(Byte b :bytes){
			System.out.print(b+"-");
		}
		  System.out.println();
		byte[] bytes1 = x.getBytes("gb2312");
		for(Byte b :bytes1){
			System.out.print(b+"-");
		}
		  System.out.println();
		byte[] bytes2 = x.getBytes("gbk");
		for(Byte b :bytes2){
			System.out.print(b+"-");
		}
		  System.out.println();
		byte[] bytes3 = x.getBytes("utf-8");
		for(Byte b :bytes3){
			System.out.print(b+"-");
		}
		  System.out.println();
			byte[] bytes4 = x.getBytes("ascii");
			for(Byte b :bytes4){
				System.out.print(b+"-");
			}
			  System.out.println();
			char[] chras = Hex.encodeHex(bytes4);
			for(Character b :chras){
				System.out.print(b+"-");
			}
        //System.out.println(x);
        System.out.println();
	}
}